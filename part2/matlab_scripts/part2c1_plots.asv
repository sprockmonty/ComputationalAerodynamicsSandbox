clear
clc
close all
load('../data/partc_data/expAndAvl.mat')
cpViscX = readmatrix('../../../jentemp/cp_inv_fine_m04');
cpViscZ = readmatrix('../data/partc_data/Cp_visc_fine_04_z');
cpInviscX = readmatrix('../data/partc_data/Cp_invisc_fine_04_x');
cpInviscZ = readmatrix('../data/partc_data/Cp_invisc_fine_04_z');

data = [cpViscX,cpInviscX,cpViscZ,cpInviscZ];

plotNames = ["AVL", "Experimental", "Viscous", "Invisid"];
plotColours = ['kkrr'];
figure
hold on
grid on
p = [];

%Avl plot
p = [p,plot(dcpAVL(:,1),dcpAVL(:,2),'--b','LineWidth',1.5,'MarkerIndices',1:5:length(dcpAVL(:,1)))];
plot(dcpAVL(:,3),dcpAVL(:,4),'--b','LineWidth',1.5,'MarkerIndices',1:5:length(dcpAVL(:,3)))

%Experimental plot
cpExp04 = [cpExp04(:,1)*(dcpAVL(end,1)-dcpAVL(1,1)) + dcpAVL(1,1), abs(cpExp04(:,2)-cpExp04(:,3))];
cpExp0925 = [cpExp0925(:,1)*(dcpAVL(end,3)-dcpAVL(1,3)) + dcpAVL(1,3), abs(cpExp0925(:,2)-cpExp0925(:,3))];

p = [p,plot(cpExp04(:,1),cpExp04(:,2),'--','LineWidth',1.5,'Color','#D95319')];
plot(cpExp0925(:,1),cpExp0925(:,2),'--','LineWidth',1.5,'Color','#D95319')

for i = 1:4
    cpX = data(:,2*i-1:2*i);
    cpX(any(isnan(cpX),2),:) = [];
    cpZ = data(:,2*i+7:2*i+8);
    cpZ(any(isnan(cpZ),2),:) = [];
    
    [cpUpper, cpLower] = clasifyPoints(cpX,cpZ);
    [dcp, range] = sortAndSpline(cpUpper, cpLower);
    if mod(i,2)
        p = [p,plot(range, dcp,'x-','LineWidth',1.5,'Color',plotColours(i),'MarkerIndices',1:70:length(range))];
    else
        plot(range, dcp,'x-','LineWidth',1.5,'Color',plotColours(i),'MarkerIndices',1:70:length(range))
    end
end
legend(p,plotNames)
title("Difference in C_P for different datasets")
ylabel("\Delta C_P")
xlabel("Chordwise position (m)")
xlim([0.13,0.41])
set(gca,'FontSize',20)
set(gcf,'Position',[0 0 1300 800])
saveas(gcf,'plots/partc_plots/dcp','epsc')

function [cpUpper, cpLower] = clasifyPoints(cpX, cpZ)
    for i = 1:size(cpX,1)
        index = find(cpX(i,2)==cpZ(:,2));
        if cpZ(index,1) >= 0
            cpX(i,3) = 1;
        else
            cpX(i,3) = -1;
        end
    end
    cpUpper = cpX(cpX(:,3)==1,1:2);
    cpLower = cpX(cpX(:,3)==-1,1:2);
end

function [dcp,range] = sortAndSpline(cpUpper, cpLower)
    cpUpper = sortrows(cpUpper,1);
    cpLower = sortrows(cpLower,1);
    cpUpperFit = fit(cpUpper(:,1),cpUpper(:,2),'smoothingspline');
    cpLowerFit = fit(cpLower(:,1),cpLower(:,2),'smoothingspline');
    minx = min([cpUpper(1,1),cpLower(1,1)]);
    maxx = max([cpUpper(end,1),cpLower(end,1)]);
    range = minx:(maxx-minx)/1000:maxx;
    dcp = abs(cpUpperFit(range)-cpLowerFit(range));
end